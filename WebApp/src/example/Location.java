
package example;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Location", targetNamespace = "http://example/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Location {


    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkExpiryTime", targetNamespace = "http://example/", className = "example.CheckExpiryTime")
    @ResponseWrapper(localName = "checkExpiryTimeResponse", targetNamespace = "http://example/", className = "example.CheckExpiryTimeResponse")
    @Action(input = "http://example/Location/checkExpiryTimeRequest", output = "http://example/Location/checkExpiryTimeResponse")
    public boolean checkExpiryTime(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws IllegalAccessException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "addLocation", targetNamespace = "http://example/", className = "example.AddLocation")
    @ResponseWrapper(localName = "addLocationResponse", targetNamespace = "http://example/", className = "example.AddLocationResponse")
    @Action(input = "http://example/Location/addLocationRequest", output = "http://example/Location/addLocationResponse", fault = {
        @FaultAction(className = IllegalAccessException_Exception.class, value = "http://example/Location/addLocation/Fault/IllegalAccessException")
    })
    public void addLocation(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws IllegalAccessException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws IllegalAccessException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteLocation", targetNamespace = "http://example/", className = "example.DeleteLocation")
    @ResponseWrapper(localName = "deleteLocationResponse", targetNamespace = "http://example/", className = "example.DeleteLocationResponse")
    @Action(input = "http://example/Location/deleteLocationRequest", output = "http://example/Location/deleteLocationResponse", fault = {
        @FaultAction(className = IllegalAccessException_Exception.class, value = "http://example/Location/deleteLocation/Fault/IllegalAccessException")
    })
    public void deleteLocation(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws IllegalAccessException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws IllegalAccessException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveLocation", targetNamespace = "http://example/", className = "example.SaveLocation")
    @ResponseWrapper(localName = "saveLocationResponse", targetNamespace = "http://example/", className = "example.SaveLocationResponse")
    @Action(input = "http://example/Location/saveLocationRequest", output = "http://example/Location/saveLocationResponse", fault = {
        @FaultAction(className = IllegalAccessException_Exception.class, value = "http://example/Location/saveLocation/Fault/IllegalAccessException")
    })
    public void saveLocation(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2)
        throws IllegalAccessException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserLocation", targetNamespace = "http://example/", className = "example.GetUserLocation")
    @ResponseWrapper(localName = "getUserLocationResponse", targetNamespace = "http://example/", className = "example.GetUserLocationResponse")
    @Action(input = "http://example/Location/getUserLocationRequest", output = "http://example/Location/getUserLocationResponse")
    public List<String> getUserLocation(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
